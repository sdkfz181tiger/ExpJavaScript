/**; * p5.play; *; * @version 3; * @author quinton-ashley; * @year 2022; * @license gpl-v3-only; * @descripton p5.play is a 2D game engine that uses planck (Box2D) to simulate; * physics and provides sprites, a tile system, input handling, and animations!; *; * Created by Quinton Ashley @qashto, 2022; * https://quintos.org; *; * Initiated by Paolo Pedercini @molleindustria, 2015; * https://molleindustria.org/; */;p5.prototype.registerMethod('init',function p5PlayInit(){const log=console.log;this.log=console.log;let pInst=this;this.angleMode(p5.prototype.DEGREES);if(typeof window.planck=='undefined'){throw new Error('planck.js must be loaded before p5.play')};const pl=planck;pl.Settings.velocityThreshold=0.19;let plScale=60;this.p5play=this.p5play||{};this.p5play.autoDrawSprites??=!0;this.p5play.autoUpdateSprites??=!0;this.p5play.mouseTracking??=!0;this.p5play.mouseSprite=null;this.p5play.mouseSprites=[];this.p5play.chainOrigin='center';this.p5play.chainPoints='relative';this.p5play.standardizeKeyboard=!1;const scaleTo=({x,y},tileSize)=>new pl.Vec2((x*tileSize)/plScale,(y*tileSize)/plScale);const scaleFrom=({x,y},tileSize)=>new pl.Vec2((x/tileSize)*plScale,(y/tileSize)*plScale);const fixRound=(val)=>(Math.abs(val-Math.round(val))<=pl.Settings.linearSlop?Math.round(val):val);let spriteProps=['bounciness','collider','density','d','debug','diameter','direction','drag','dynamic','friction','h','height','isSuperFast','kinematic','layer','life','mass','rotation','rotationDrag','rotationLock','rotationSpeed','scale','shape','shapeColor','speed','static','text','textColor','tileSize','visible','w','width','x','xLock','y','yLock'];class Sprite{constructor(x,y,w,h,collider){this.p=pInst;let args=[...arguments];let group,ani;if(args[0]!==undefined&&args[0]instanceof Group){group=args[0];args=args.slice(1)};if(args[0]!==undefined&&!Array.isArray(args[0])&&typeof args[0]!=='number'){ani=args[0];args=args.slice(1)};if(args.length==1&&typeof args[0]=='number'){throw new Error("Invalid input parameters for the Sprite constructor. You can't only have one number! Specify both the x and y position of the sprite")};x=args[0];y=args[1];w=args[2];h=args[3];collider=args[4];if(Array.isArray(x)){x=undefined;y=undefined;w=args[0];h=args[1];collider=args[2]};if(Array.isArray(w)||(!isNaN(w)&&typeof h=='string')){collider=h;h=undefined}else if(isNaN(w)){collider=w;w=undefined};this.groups=[];this.p.allSprites.push(this);this.animations={};this.autoResetAnimations;this.removed=!1;this.shape;if(group){group.push(this);if(!ani){for(let _ani in group.animations){ani=_ani;break}}}else{group=this.p.allSprites};if(group.dynamic)collider??='dynamic';if(group.kinematic)collider??='kinematic';if(group.static)collider??='static';collider??=group.collider;this.shape=group.shape;this.life=100000000;this.visible=!0;this.mouseIsOver=0;this.mouseIsPressed=0;this.collides={};this.overlaps={};this.tileSize=group.tileSize;let _this=this;this.position={get x(){return _this.x},set x(val){_this.x=val},get y(){return _this.y},set y(val){_this.y=val}};this._pos={x:0,y:0};this._vel={x:0,y:0};this.vel={get x(){let val;if(!_this.body)val=_this._vel.x;else val=_this.body.getLinearVelocity().x;return fixRound(val/_this.tileSize)},set x(val){val*=_this.tileSize;if(_this.body){_this.body.setLinearVelocity(new pl.Vec2(val,_this.body.getLinearVelocity().y))}else{_this._vel.x=val}},get y(){let val;if(!_this.body)val=_this._vel.y;else val=_this.body.getLinearVelocity().y;return fixRound(val/_this.tileSize)},set y(val){val*=_this.tileSize;if(_this.body){_this.body.setLinearVelocity(new pl.Vec2(_this.body.getLinearVelocity().x,val))}else{_this._vel.y=val}}};this.velocity={get x(){return _this.vel.x},set x(val){_this.vel.x=val},get y(){return _this.vel.y},set y(val){_this.vel.y=val}};this._mirror={x:1,y:1};this.mirror={get x(){return _this._mirror.x<0},set x(val){_this._mirror.x=val?-1:1},get y(){return _this._mirror.y<0},set y(val){_this._mirror.y=val?-1:1}};this.touching={};this.touching.left=null;this.touching.right=null;this.touching.top=null;this.touching.bottom=null;if(ani){if(ani instanceof p5.Image){this.addAni(ani)}else{if(typeof ani=='string')this._changeAni(ani);else this._animation=ani.clone()};let ts=this.tileSize;if(!w&&this.ani.w!=1){w=this.ani.w/ts;if(this.shape!='circle'&&this.ani.h>1){h=this.ani.h/ts}}};this.layer=group.layer;this.layer??=this.p.allSprites.maxDepth()+1;collider??=group.collider;if(!collider||typeof collider!='string'){collider='dynamic'};x??=group.x;if(x===undefined)x=this.p.width/this.p.allSprites.tileSize/2;y??=group.y;if(y===undefined)y=this.p.height/this.p.allSprites.tileSize/2;w??=group.w||group.width||group.diameter;h??=group.h||group.height;if(typeof x=='function')x=x(group.length-1);if(typeof y=='function')y=y(group.length-1);this.x=x;this.y=y;this.mouse=new SpriteMouse();if(collider!='none'&&collider!='n'){this._collider=collider;this.addCollider(0,0,w,h)}else{this.w=w||(this.tileSize>1?1:50);this.h=h;if(h===undefined)this.shape='circle';else this.shape='box'};this._scale=1;this.previousPosition={x,y};this.dest={x,y};this.vel.x=0;this.vel.y=0;this._destIdx=0;this.drag=0;this.debug=!1;this._shift={};this.idNum=this.p.world.spritesCreated;this.p.world.spritesCreated++;for(let prop of spriteProps){if(prop=='collider'||prop=='x'||prop=='y')continue;let val=group[prop];if(val===undefined)continue;if(typeof val=='function')val=val(group.length-1);if(typeof val=='object'){this[prop]=Object.assign({},val)}else{this[prop]=val}};for(let g of this.groups){let traits={};let props=Object.keys(g);for(let prop of props){if(!isNaN(prop)||prop[0]=='_')continue;traits[prop]=null};let deletes=['collider','idNum','p','parent','length','collides','overlaps','animation','animations','shouldCull','Sprite','Group','vel','mirror','mouse'];for(let d of deletes){delete traits[d]};for(let prop in traits){let val=g[prop];if(val===undefined)continue;if(typeof val=='object'){this[prop]=Object.assign({},val)}else{this[prop]=val}}};this.shapeColor??=this.p.color(this.p.random(30,245),this.p.random(30,245),this.p.random(30,245));this.textColor??=this.p.color(0);let shouldCreateSensor=!1;for(let g of this.groups){if(g._hasOverlaps){shouldCreateSensor=!0;break}};if(shouldCreateSensor&&!this._hasOverlaps)this._createSensors()};addCollider(offsetX,offsetY,w,h){if(!this.body){this.body=this.p.world.createBody({position:scaleTo({x:this.x,y:this.y},this.tileSize),type:this.collider});this.body.sprite=this};let path,shape;offsetX??=0;offsetY??=0;w??=this._w;h??=this._h;if(Array.isArray(w)){path=w}else{if(w!==undefined&&h===undefined)shape??='circle';shape??='box'};if(shape=='box'||shape=='circle'){w??=this.tileSize>1?1:50;h??=w};let props={};let dimensions;if(shape=='box'||shape=='circle'){dimensions=scaleTo({x:w-0.08,y:h-0.08},this.tileSize)};let s;if(shape=='box'){s=pl.Box(dimensions.x/2,dimensions.y/2,scaleTo({x:offsetX,y:offsetY},this.tileSize),0)}else if(shape=='circle'){s=pl.Circle(dimensions.x/2);s.m_p.x=0;s.m_p.y=0}else if(path){let vecs=[{x:0,y:0}];let vert={x:0,y:0};let min={x:0,y:0};let max={x:0,y:0};let usesVertices=Array.isArray(path[0]);let originMode=this.p.p5play.chainOrigin;let pointMode=this.p.p5play.chainPoints;function checkVert(){if(vert.x<min.x)min.x=vert.x;if(vert.y<min.y)min.y=vert.y;if(vert.x>max.x)max.x=vert.x;if(vert.y>max.y)max.y=vert.y};if(usesVertices){for(let i=0;i<path.length;i++){if(pointMode=='relative'){vert.x=path[i][0];vert.y=path[i][1]}else{vert.x=path[i][0]-this.x;vert.y=path[i][1]-this.y};vecs.push({x:vert.x,y:vert.y});checkVert()}}else{let rep=1;if(path.length%2)rep=path[path.length-1];let mod=rep>0?1:-1;rep=Math.abs(rep);let ang=0;for(let i=0;i<rep;i++){for(let j=0;j<path.length-1;j+=2){let len=path[j];ang+=path[j+1];vert.x+=len*this.p.cos(ang);vert.y+=len*this.p.sin(ang);vecs.push({x:vert.x,y:vert.y});checkVert()};ang*=mod}};if(Math.round(vert.x*1e6)/1e6==0&&Math.round(vert.y*1e6)/1e6==0&&vecs.length-1<=pl.Settings.maxPolygonVertices){shape='polygon'}else{shape='chain'};w=max.x-min.x;this._hw=w*0.5;h=max.y-min.y;this._hh=h*0.5;if(originMode=='center'){for(let i=0;i<vecs.length;i++){let vec=vecs[i];vecs[i]=new pl.Vec2(((vec.x-this._hw-min.x)*this.tileSize)/plScale,((vec.y-this._hh-min.y)*this.tileSize)/plScale)}}else{for(let i=0;i<vecs.length;i++){let vec=vecs[i];vecs[i]=new pl.Vec2((vec.x*this.tileSize)/plScale,(vec.y*this.tileSize)/plScale)}};if(shape=='polygon'){if(this._isConvexPoly(vecs.slice(0,-1))){s=pl.Polygon(vecs)}else shape='chain'};if(shape=='chain'){s=pl.Chain(vecs,!1);props.density=0;props.restitution=0}};props.shape=s;props.density??=this.density||5;props.friction??=this.friction||0.5;props.restitution??=this.bounciness||0.2;this.body.createFixture(props);if(!this.shape){this.shape=shape}else if(this.fixture.getNext()){this.shape='combo'};if(shape=='circle')this._diameter=w;else{this._h=h;this._hh=h*0.5};this._w=w;this._hw=w*0.5};removeColliders(){this.collides={};this._removeFixtures(!1)};removeSensors(){this.overlaps={};this._removeFixtures(!0)};_removeFixtures(isSensor){let prevFxt;for(let fxt=this.fixtureList;fxt;fxt=fxt.getNext()){if(fxt.m_isSensor==isSensor){let _fxt=fxt.m_next;fxt.destroyProxies(this.p.world.m_broadPhase);if(!prevFxt){this.body.m_fixtureList=_fxt}else{prevFxt.m_next=_fxt}}else{prevFxt=fxt}}};_cloneBodyProps(){let body={};let props=[...spriteProps];let deletes=['w','h','width','height','shape','d','diameter','dynamic','static','kinematic','collider'];for(let del of deletes){let i=props.indexOf(del);if(i>=0)props.splice(i,1)};for(let prop of props){body[prop]=this[prop]};return body};get animation(){return this._animation};set animation(val){this.changeAni(val)};get ani(){return this._animation};set ani(val){this.changeAni(val)};get anis(){return this.animations};get bounciness(){if(!this.fixture)return;return this.fixture.getRestitution()};set bounciness(val){for(let fxt=this.fixtureList;fxt;fxt=fxt.getNext()){fxt.setRestitution(val)}};get centerOfMass(){return scaleFrom(this.body.getWorldCenter(),this.tileSize)};get collider(){return this._collider};set collider(val){if(this._collider==val)return;let bodyProps;if(this._collider!='none'){bodyProps=this._cloneBodyProps()};if(this.body){this.p.world.destroyBody(this.body);this.body=undefined};this._collider=val;if(this._collider!='none'){this.addCollider();if(this._hasOverlaps){this._createSensors()};for(let prop in bodyProps){this[prop]=bodyProps[prop]}}};get density(){if(!this.fixture)return;return this.fixture.getDensity()};set density(val){for(let fxt=this.fixtureList;fxt;fxt=fxt.getNext()){fxt.setDensity(val)}};get depth(){return this.layer};set depth(val){this.layer=val};get direction(){if(this.body&&(this.vel.x!==0||this.vel.y!==0)){return this.p.atan2(this.vel.y,this.vel.x)};if(!this._direction)return this.rotation;return this._direction};set direction(val){this._direction=val;let speed=this.speed;this.vel.x=this.p.cos(val)*speed;this.vel.y=this.p.sin(val)*speed};get drag(){if(this.body)return this.body.getLinearDamping();else return Infinity};set drag(val){if(this.body)this.body.setLinearDamping(val)};get draw(){return this._display};set draw(val){this._draw=val};get dynamic(){return this.body.isDynamic()};set dynamic(val){if(val)this.collider='dynamic'};get rotationLock(){return this.body.isFixedRotation()};set rotationLock(val){this.body.setFixedRotation(val)};get fixture(){return this.fixtureList};get fixtureList(){if(!this.body)return null;return this.body.getFixtureList()};get friction(){if(!this.fixture)return;return this.fixture.getFriction()};set friction(val){for(let fxt=this.fixtureList;fxt;fxt=fxt.getNext()){fxt.setFriction(val)}};get immovable(){return this.body.isStatic()};set immovable(val){if(val)this.body.setStatic()};get isMoving(){return this.vel.x!=0||this.vel.y!=0};get isSuperFast(){return this.body.isBullet()};set isSuperFast(val){this.body.setBullet(val)};get kinematic(){return this.body.isKinematic()};set kinematic(val){if(val)this.collider='kinematic'};get mass(){return this.body.getMass()};set mass(val){let t=this.massData;t.mass=val;this.body.setMassData(t)};get massData(){const t={I:0,center:new pl.Vec2(0,0),mass:0};this.body.getMassData(t);t.center=scaleFrom(t.center,this.tileSize);return t};get rotation(){if(!this.body)return this._angle||0;if(this.p._angleMode===p5.prototype.DEGREES){return p5.prototype.degrees(this.body.getAngle())};return this.body.getAngle()};set rotation(val){if(this.body){if(this.p._angleMode===p5.prototype.DEGREES){this.body.setAngle(p5.prototype.radians(val))}else{this.body.setAngle(val)}}else{this._angle=val}};get rotationDrag(){return this.body.getAngularDamping()};set rotationDrag(val){this.body.setAngularDamping(val)};get rotationSpeed(){if(this.body)return this.body.getAngularVelocity();return this._rotationSpeed||0};set rotationSpeed(val){if(this.body)this.body.setAngularVelocity(val);else this._rotationSpeed=val};get scale(){return this._scale};set scale(val){if(val==1)return;this._w*=val;this._hw*=val;if(this._h){this._h*=val;this._hh*=val};this._resizeCollider(val);this._scale=val;if(this.ani){this.ani.scale.x=val;this.ani.scale.y=val}};get shapeColor(){return this._shapeColor};set shapeColor(val){if(val instanceof p5.Color){this._shapeColor=val}else if(typeof val!='object'){this._shapeColor=this.p.color(val)}else{this._shapeColor=this.p.color(...val.levels)}};get speed(){return this.p.createVector(this.vel.x,this.vel.y).mag()};getSpeed(){return this.speed};set speed(val){let angle=this.direction;this.vel.x=this.p.cos(angle)*val;this.vel.y=this.p.sin(angle)*val};get static(){return this.body.isStatic()};set static(val){if(val)this.collider='static'};set torque(val){this.body.applyTorque(val,!0)};get x(){if(!this.body)return this._pos.x;let x=(this.body.getPosition().x/this.tileSize)*plScale;return fixRound(x)};set x(val){if(this.body){let pos=new pl.Vec2((val*this.tileSize)/plScale,this.body.getPosition().y);this.body.setPosition(pos)};this._pos.x=val};get y(){if(!this.body)return this._pos.y;let y=(this.body.getPosition().y/this.tileSize)*plScale;return fixRound(y)};set y(val){if(this.body){let pos=new pl.Vec2(this.body.getPosition().x,(val*this.tileSize)/plScale);this.body.setPosition(pos)};this._pos.y=val};set pos(val){let pos=new pl.Vec2((val.x*this.tileSize)/plScale,(val.y*this.tileSize)/plScale);_this.body.setPosition(pos)};get w(){return this._w};set w(val){if(val<0)val=0.01;if(val==this._w)return;let scale=val/this._w;this._w=val;this._hw=val*0.5;this._resizeCollider({x:scale})};get hw(){return this._hw};set hw(val){throw new Error("Unable to change the value of halfWidth directly, change the sprite's width instead")};get width(){return this.w};set width(val){this.w=val};get halfWidth(){return this.hw};set halfWidth(val){throw new Error("Unable to change the value of halfWidth directly, change the sprite's width instead")};get h(){if(this.shape=='circle')return this._w;return this._h};set h(val){if(val<0)val=0.01;if(this.shape=='circle'){this.w=val;return};if(val==this._h)return;let scale=val/this._h;this._h=val;this._hh=val*0.5;this._resizeCollider({y:scale})};get hh(){return this._hh};set hh(val){throw new Error("Unable to change the value of halfHeight directly, change the sprite's height instead")};get height(){return this.h};set height(val){this.h=val};get halfHeight(){return this.hh};set halfHeight(val){throw new Error("Unable to change the value of halfHeight directly, change the sprite's height instead")};get d(){this._diameter??=this.w;return this._diameter};set d(val){if(val<0){this.remove();return};if(this._diameter==val)return;this._diameter=val;let prevShape=this.shape;if(prevShape!='circle'){let bodyProps;if(this._collider=='none'){bodyProps=this._cloneBodyProps()};this.removeColliders();this._h=undefined;this.shape=undefined;if(this._collider!='none'){this.addCollider(0,0,val);for(let prop in bodyProps){this[prop]=bodyProps[prop]}};this.shape='circle'};let scale=val/this._w;this._w=val;this._hw=val*0.5;if(prevShape!='circle')return;this._resizeCollider(scale)};get diameter(){return this.d};set diameter(val){this.d=val};get r(){return this._hw};set r(val){throw new Error("Unable to change the value of radius directly, change the sprite's diameter instead")};get radius(){return this._hw};set radius(val){throw new Error("Unable to change the value of radius directly, change the sprite's diameter instead")};_resizeCollider(scale){if(!this.body)return;if(typeof scale=='number'){scale={x:scale,y:scale}}else{if(!scale.x)scale.x=1;if(!scale.y)scale.y=1};if(this.shape=='circle'){let fxt=this.fixture;let sh=fxt.m_shape;sh.m_radius*=scale.x}else{for(let fxt=this.fixtureList;fxt;fxt=fxt.getNext()){if(fxt.m_isSensor)continue;let sh=fxt.m_shape;for(let vert of sh.m_vertices){vert.x*=scale.x;vert.y*=scale.y}}}};_isConvexPoly(vecs){for(let i=0;i<vecs.length;++i){const i1=i;const i2=i<vecs.length-1?i1+1:0;const p=vecs[i1];const e=pl.Vec2.sub(vecs[i2],p);for(let j=0;j<vecs.length;++j){if(j==i1||j==i2){continue};const v=pl.Vec2.sub(vecs[j],p);const c=pl.Vec2.cross(e,v);if(c<0.0){return!1}}};return!0};get update(){return this._update};set update(val){this._customUpdate=val};_update(){if(this.animation)this.animation.update();if(!this.body){this.rotation+=this._rotationSpeed;this.x+=this.vel.x;this.y+=this.vel.y};if(this.xLock)this.x=this.previousPosition.x;if(this.yLock)this.y=this.previousPosition.y;for(let prop in this.mouse){if(this.mouse[prop]==-1)this.mouse[prop]=0};if(this._customUpdate)this._customUpdate()};_draw(){if(this.animation&&!this.debug){this.animation.draw(0,0,undefined,this._scale,this._scale)}else if(this.fixture!=null){if(this.shape=='chain')this.p.stroke(this.shapeColor);for(let fxt=this.fixtureList;fxt;fxt=fxt.getNext()){this._drawFixture(fxt)}}else{this.p.stroke(120);if(this.shape=='box'){this.p.rect(0,0,this.w,this.h)}else if(this.shape=='circle'){this.p.circle(0,0,this.d)}};if(this.text){this.p.textAlign(this.p.CENTER,this.p.CENTER);this.p.fill(this.textColor);this.p.textSize(this.textSize);this.p.text(this.text,0,0)}};_display(){let x=this.p.width*0.5-this.p.world.origin.x+this.x*this.tileSize;let y=this.p.height*0.5-this.p.world.origin.y+this.y*this.tileSize;if(this.shape!='chain'&&this.p.camera.active&&(x<this.p.camera.bound.min.x||x>this.p.camera.bound.max.x||y<this.p.camera.bound.min.y||y>this.p.camera.bound.max.y)){return};x=fixRound(x);x-=(this.w*this.tileSize)%2?0.5:0;y=fixRound(y);y-=(this.h*this.tileSize)%2?0.5:0;this.p.push();this.p.imageMode(p5.prototype.CENTER);this.p.rectMode(p5.prototype.CENTER);this.p.ellipseMode(p5.prototype.CENTER);this.p.translate(x,y);if(this.rotation)this.p.rotate(this.rotation);this.p.scale(this._mirror.x,this._mirror.y);this.p.fill(this.shapeColor);this._draw();this.p.pop();this.p.p5play.autoDrawSprites=!1;this._cameraActiveWhenDrawn=this.p.camera.active};_drawFixture(fxt){const sh=fxt.m_shape;if(sh.m_type=='polygon'||sh.m_type=='chain'){if(sh.m_type=='chain'){this.p.push();this.p.noFill()};let v=sh.m_vertices;this.p.beginShape();for(let i=0;i<v.length;i++){this.p.vertex(v[i].x*plScale,v[i].y*plScale)};if(sh.m_type!='chain')this.p.endShape(p5.prototype.CLOSE);else{this.p.endShape();this.p.pop()}}else if(sh.m_type=='circle'){const d=sh.m_radius*2*plScale;this.p.ellipse(sh.m_p.x*plScale,sh.m_p.y*plScale,d,d)}else if(sh.m_type=='edge'){this.p.line(sh.m_vertex1.x*plScale,sh.m_vertex1.y*plScale,sh.m_vertex2.x*plScale,sh.m_vertex2.y*plScale)}};setVelocity(x,y){this.body.setLinearVelocity(new pl.Vec2(x,y))};setSpeed(speed,direction){console.warn('setSpeed is deprecated. Set direction and set speed separately instead.');if(direction)this.direction=direction;this.speed=speed};addSpeed(speed,angle){angle??=this.direction;this.vel.x+=this.p.cos(angle)*speed;this.vel.y+=this.p.sin(angle)*speed};getDirection(){return this.direction};moveTowards(destX,destY,tracking){if(!destX&&!destY)return;tracking??=0.1;if(destX!==undefined&&destX!==null){this.vel.x=(destX-this.x)*tracking*this.tileSize};if(destY!==undefined&&destY!==null){this.vel.y=(destY-this.y)*tracking*this.tileSize}};move(destX,destY,speed){if(typeof destX=='undefined'){console.error('sprite.move ERROR: movement direction or destination not defined');return};this.dest.x=this.x;this.dest.y=this.y;let direction=!0;if(typeof destX=='string'){speed=arguments[1];direction=arguments[0];if(direction=='up')this.dest.y--;if(direction=='down')this.dest.y++;if(direction=='left')this.dest.x--;if(direction=='right')this.dest.x++;destX=destY=!1;if(/(up|down)/.test(direction)){destY=!0};if(/(left|right)/.test(direction)){destX=!0};this.direction=direction}else{if(destX==this.x)destX=!1;if(destX)this.dest.x=destX;if(destY==this.y)destY=!1;if(destY)this.dest.y=destY};this._destIdx++;if(!destX&&!destY)return!0;if(this.tileSize>1)speed??=0.1;speed??=1;if(speed<=0){console.warn('sprite.move: speed should be a positive number');speed=Math.abs(speed)};let dist=Math.max(Math.abs(this.x-this.dest.x),Math.abs(this.y-this.dest.y));let percent=speed/dist;this.vel.x=(this.dest.x-this.x)*percent;this.vel.y=(this.dest.y-this.y)*percent;let totalSpeed=Math.sqrt(this.vel.x**2+this.vel.y**2);let frames=Math.floor(dist/totalSpeed)-5;let margin=totalSpeed+0.01;let destIdx=this._destIdx;return(async()=>{let distX=margin+margin;let distY=margin+margin;do{await p5.prototype.delay();if(frames>0){frames--;continue};if(destIdx!=this._destIdx)return;distX=Math.abs(this.x-this.dest.x);distY=Math.abs(this.y-this.dest.y)}while((destX&&distX>margin)||(destY&&distY>margin));if(distX<margin)this.x=this.dest.x;if(distY<margin)this.y=this.dest.y;this.vel.x=0;this.vel.y=0})()};moveTo(destX,destY,speed){return this.move(destX,destY,speed)};attractionPoint(magnitude,x,y){let angle=this.p.atan2(y-this.y,x-this.x);this.vel.x+=this.p.cos(angle)*magnitude;this.vel.y+=this.p.sin(angle)*magnitude};snap(o,dist){if(o.isMoving||o.x!=o.dest.x||o.y!=o.dest.y||!this.isMoving)return;dist??=1||this.tileSize*0.1;if(Math.abs(this.x)%1>=dist||Math.abs(this.y)%1>=dist){return};this.vel.x=0;this.vel.y=0;this.x=Math.round(this.x);this.y=Math.round(this.y)};rotateTowards(x,y,tracking){};rotate(angle,speed){if(!angle){throw new Error('angle must be a number greater or less than zero')};let ang=this.rotation+angle;let mod=ang-this.rotation>0?1:-1;this.rotationSpeed=speed*mod;return(async()=>{let cw=ang>this.rotation;while((cw&&this.rotation<ang)||(!cw&&this.rotation>ang)){await p5.prototype.delay()};this.rotationSpeed=0;this.rotation=ang})()};async changeAni(...anis){if(anis.length==1&&Array.isArray(anis[0])){anis=anis[0]};let count=++this._aniChanged;for(let i=0;i<anis.length;i++){if(typeof anis[i]=='string')anis[i]={name:anis[i]};let ani=anis[i];if(ani.name[0]=='!'){ani.name=ani.name.slice(1);ani.start=-1;ani.end=0}};let _ani=(name,start,end)=>{return new Promise((resolve)=>{this._changeAni(name);if(start<0){start=this.animation.images.length+start};if(start)this.animation.frame=start;if(end!=undefined)this.animation.goToFrame(end);this.animation.onComplete=()=>{resolve()}})};for(let i=0;i<anis.length;i++){let ani=anis[i];if(ani.name=='*'){if(count==this._aniChanged)i=0;continue};let{name,start,end}=ani;await _ani(name,start,end)}};changeAnimation(){return this.changeAni(...arguments)};_changeAni(label){let ani=this.animations[label];if(!ani){for(let g of this.groups){ani=g.animations[label];if(ani){ani=ani.clone();break}}};if(!ani){this.p.noLoop();throw new Error('changeAnimation error: no animation named '+label)};this._animation=ani;this.animation.name=label;if(this.autoResetAnimations||(this.autoResetAnimations!==!1&&this.p.world.autoResetAnimations)){this.animation.frame=0}};remove(){if(this.body)this.p.world.destroyBody(this.body);this.removed=!0;while(this.groups.length>0){this.groups[0].remove(this)}};toString(){return's'+this.idNum};collide(target,callback){if(!(target instanceof Sprite)&&!(target instanceof Group)){throw new Error('collide target must be a sprite or a group')};this.collides[target]=callback||!0};bounce(target,callback){this.collide(target,callback)};displace(target,callback){this.collide(target,callback)};overlap(target,callback){if(!(target instanceof Sprite)&&!(target instanceof Group)){throw new Error('collide target must be a sprite or a group')};if(!this._hasOverlaps)this._createSensors();if(target instanceof Sprite){if(!target._hasOverlaps)target._createSensors()}else if(target instanceof Group){for(let s of target){if(!s._hasOverlaps)s._createSensors()};target._hasOverlaps=!0};this.overlaps[target]=callback||!0;return this.touching[target]};_createSensors(){let shape;for(let fxt=this.fixtureList;fxt;fxt=fxt.getNext()){shape=fxt.m_shape;this.body.createFixture({shape:shape,isSensor:!0})};this._hasOverlaps=!0};getAnimationLabel(){return this.animation.name}};class SpriteAnimation{constructor(){this.p=pInst;let args=[...arguments];this.name='default';let parent;if(args[0]instanceof Sprite||args[0]instanceof Group){parent=args[0];args=args.slice(1)};parent??=this.p.allSprites;if(typeof args[0]=='string'&&(args[0].length==1||!args[0].includes('.'))){this.name=args[0];args=args.slice(1)};this.images=[];this.frame=0;this.cycles=0;this.targetFrame=-1;this.offset={x:0,y:0};this.frameDelay=4;this.playing=!0;this.visible=!0;this.looping=!0;this.endOnFirstFrame=!1;this.frameChanged=!1;this.rotation=0;this.scale={x:1,y:1};if(args.length==0)return;if(args.length==2&&typeof args[0]=='string'&&(typeof args[1]=='string'||typeof args[1]=='number')){let from=args[0];let to,num2;if(!isNaN(args[1]))num2=Number(args[1]);else to=args[1];if(from.slice(-4)!='.png'||(to&&to.slice(-4)!='.png')){throw new Error('SpriteAnimation error: you need to use .png files (filename '+from+')')};let digits1=0;let digits2=0;for(let i=from.length-5;i>=0;i--){if(!isNaN(from.charAt(i)))digits1++;else break};if(to){for(let i=to.length-5;i>=0;i--){if(!isNaN(to.charAt(i)))digits2++;else break}};let prefix1=from.slice(0,-4-digits1);let prefix2;if(to)prefix2=to.slice(0,-4-digits2);if(to&&prefix1!=prefix2){this.images.push(this.p.loadImage(from));this.images.push(this.p.loadImage(to))}else{let num1=parseInt(from.slice(-4-digits1,-4),10);num2??=parseInt(to.slice(-4-digits2,-4),10);if(num2<num1){let t=num2;num2=num1;num1=t};let fileName;if(!to||digits1==digits2){for(let i=num1;i<=num2;i++){fileName=prefix1+this.p.nf(i,digits1)+'.png';this.images.push(this.p.loadImage(fileName))}}else{for(let i=num1;i<=num2;i++){fileName=prefix1+i+'.png';this.images.push(this.p.loadImage(fileName))}}}}else if(typeof args[args.length-1]!='string'&&!(args[args.length-1]instanceof p5.Image)){let sheet=parent.spriteSheet;let atlas;if(args[0]instanceof p5.Image||typeof args[0]=='string'){if(args.length>=3){throw new Error('SpriteAnimation error: the name of animation should go first')};sheet=args[0];atlas=args[1]}else{atlas=args[0]};let _this=this;if(sheet instanceof p5.Image&&sheet.modified){this.spriteSheet=sheet;_generateSheetFrames()}else{let url;if(typeof sheet=='string')url=sheet;else url=sheet.url;this.spriteSheet=this.p.loadImage(url,()=>{_generateSheetFrames()})};function _generateSheetFrames(){if(Array.isArray(atlas)||Array.isArray(atlas.frames)){if(typeof atlas[0]=='number'){if(atlas.length==4){atlas={pos:atlas.slice(0,2),size:atlas.slice(2)}}else{atlas={pos:atlas}}}else{let frames=atlas;if(Array.isArray(atlas.frames)){frames=atlas.frames;delete atlas.frames;for(let i=0;i<frames.length;i++){frames[i]={pos:frames[i]};Object.assign(frames[i],atlas)}};for(let frame of frames){atlas=frame;_generateSheetFrames()};return}};let{w,h,width,height,size,pos,line,x,y,frames,delay,rotation}=atlas;if(delay)_this.frameDelay=delay;if(rotation)_this.rotation=rotation;w??=width;h??=height;let tileSize;if(parent){w??=parent.w;h??=parent.h;tileSize=parent.tileSize};x??=0;y??=0;pos??=line;if(typeof pos=='number'){y=pos}else if(pos){x=pos[0];y=pos[1]};if(typeof size=='number'){w=h=size}else if(size){w=size[0];h=size[1]};x*=tileSize;y*=tileSize;if(!w||!h){if(tileSize){w=h=1*tileSize}else if(_this.spriteSheet.width<_this.spriteSheet.height){w=h=_this.spriteSheet.width}else{w=h=_this.spriteSheet.height}}else{w*=tileSize;h*=tileSize};let frameCount=frames||1;for(let i=0;i<frameCount;i++){_this.images.push({x,y,w,h});x+=w;if(x>=_this.spriteSheet.width){x=0;y+=h;if(y>=_this.spriteSheet.height)y=0}}}}else{for(let i=0;i<args.length;i++){if(args[i]instanceof p5.Image)this.images.push(args[i]);else this.images.push(this.p.loadImage(args[i]))}}};clone(){let ani=new SpriteAnimation();ani.spriteSheet=this.spriteSheet;ani.images=this.images.slice();ani.offset.x=this.offset.x;ani.offset.y=this.offset.y;ani.frameDelay=this.frameDelay;ani.playing=this.playing;ani.looping=this.looping;ani.rotation=this.rotation;return ani};draw(x,y,r,sx,sy){this.x=x;this.y=y;if(!this.visible)return;this.p.push();this.p.imageMode(p5.prototype.CENTER);this.p.translate(this.x,this.y);this.p.rotate(r||this.rotation);this.p.scale(sx||this.scale.x,sy||this.scale.y);let img=this.images[this.frame];if(img!==undefined){if(this.spriteSheet){let{x,y,w,h}=img;this.p.image(this.spriteSheet,this.offset.x,this.offset.y,w,h,x,y,w,h)}else{this.p.image(img,this.offset.x,this.offset.y)}}else{this.p.print('Warning undefined frame '+this.frame)};this.p.pop()};update(){this.cycles++;var previousFrame=this.frame;this.frameChanged=!1;if(this.images.length===1){this.playing=!1;this.frame=0};if(this.playing&&this.cycles%this.frameDelay===0){this.frameChanged=!0;if((this.targetFrame==-1&&this.frame==this.lastFrame)||this.frame==this.targetFrame){if(this.endOnFirstFrame)this.frame=0;if(this.looping)this.targetFrame=-1;else this.playing=!1;this.onComplete();if(!this.looping)return};if(this.targetFrame>this.frame&&this.targetFrame!==-1){this.frame++}else if(this.targetFrame<this.frame&&this.targetFrame!==-1){this.frame--}else if(this.targetFrame===this.frame&&this.targetFrame!==-1){this.playing=!1}else if(this.looping){if(this.frame>=this.lastFrame){this.frame=0}else this.frame++}else{if(this.frame<this.lastFrame)this.frame++}}};play(frame){this.playing=!0;if(frame!==undefined)this.frame=frame;this.targetFrame=-1};stop(){this.playing=!1};rewind(){this.looping=!1;this.goToFrame(0)};loop(){this.looping=!0;this.playing=!0};noLoop(){this.looping=!1};onComplete(){return undefined};changeFrame(f){if(f<this.images.length)this.frame=f;else this.frame=this.images.length-1;this.targetFrame=-1};nextFrame(){if(this.frame<this.images.length-1)this.frame=this.frame+1;else if(this.looping)this.frame=0;this.targetFrame=-1;this.playing=!1};previousFrame(){if(this.frame>0)this.frame=this.frame-1;else if(this.looping)this.frame=this.images.length-1;this.targetFrame=-1;this.playing=!1};goToFrame(toFrame){if(toFrame<0||toFrame>=this.images.length){return};this.targetFrame=toFrame;if(this.targetFrame!==this.frame){this.playing=!0}};getFrame(){return this.frame};getLastFrame(){return this.lastFrame};get lastFrame(){return this.images.length-1};get frameImage(){let f=this.frame;let img=this.images[f];if(img instanceof p5.Image)return img;let{x,y,w,h}=img;let g=createGraphics(w,h);g.image(this.spriteSheet,this.offset.x,this.offset.y,w,h,x,y,w,h);return g};get w(){return this.width};get width(){if(this.images[this.frame]instanceof p5.Image){return this.images[this.frame].width}else if(this.images[this.frame]){return this.images[this.frame].w};return 1};get h(){return this.height};get height(){if(this.images[this.frame]instanceof p5.Image){return this.images[this.frame].height}else if(this.images[this.frame]){return this.images[this.frame].h};return 1}};class Group extends Array{constructor(...args){let parent;if(args[0]instanceof Group){parent=args[0];args=args.slice(1)};super(...args);this.p=pInst;if(!this.p.allSprites)this._isAllSpritesGroup=!0;if(!this._isAllSpritesGroup)this.parent=0;if(parent)this.parent=parent.idNum;this.animations={};this.collides={};this.overlaps={};this.shouldCull;this.idNum=0;if(this.p.world){this.idNum=this.p.world.groupsCreated;this.p.world.groups[this.idNum]=this;this.p.world.groupsCreated++};let _this=this;class GroupSprite extends Sprite{constructor(){super(_this,...arguments)}};this.Sprite=GroupSprite;class SubGroup extends Group{constructor(){super(_this,...arguments)}};this.Group=SubGroup;this.mouse={pressed:null,pressing:null,held:null,holding:null,released:null,hoveredOn:null,hovering:null,hoveredOut:null};for(let state in this.mouse){this.mouse[state]=function(inp){for(let s of _this){if(s.mouse[state](inp))return!0};return!1}};let props=[...spriteProps,'spriteSheet'];for(let prop of props){Object.defineProperty(this,prop,{get(){let val=_this['_'+prop];let i=_this.length-1;if(val===undefined&&this.p.world&&!_this._isAllSpritesGroup){let parent=this.p.world.groups[_this.parent];if(parent){val=parent[prop];i=parent.length-1}};return val},set(val){_this['_'+prop]=val;for(let i=0;i<_this.length;i++){let s=_this[i];let v=val;if(typeof val=='function')v=val(i);s[prop]=v}}})};this.vel={};this.mirror={};let objProps={vel:['x','y'],mirror:['x','y']};for(let objProp in objProps){for(let prop of objProps[objProp]){Object.defineProperty(this[objProp],prop,{get(){let val=_this[objProp]['_'+prop];let i=_this.length-1;if(val===undefined&&this.p.world&&!_this._isAllSpritesGroup){let parent=this.p.world.groups[_this.parent];if(parent){val=parent[objProp][prop];i=parent.length-1}};return val},set(val){_this[objProp]['_'+prop]=val;for(let i=0;i<_this.length;i++){let s=_this[i];let v=val;if(typeof val=='function')v=val(i);s[objProp][prop]=v}}})}};this.orbitAngle=0};get ani(){return this._animation};get animation(){return this._animation};get anis(){return this.animations};set amount(val){let diff=val-this.length;let shouldAdd=diff>0;diff=Math.abs(diff);for(let i=0;i<diff;i++){if(shouldAdd)this.add(new this.Sprite());else this[this.length-1].remove()}};resetCentroid(){let x=0;let y=0;for(let s of this){x+=s.x;y+=s.y};this.centroid={x:x/this.length,y:y/this.length};return this.centroid};resetDistancesFromCentroid(){for(let s of this){s.distCentroid={x:s.x-this.centroid.x,y:s.y-this.centroid.y}}};snap(o,dist){dist??=1||this.tileSize*0.1;for(let s of this){s.snap(o,dist)}};collide(target,callback){if(!(target instanceof Sprite)&&!(target instanceof Group)){throw new Error('collide target must be a sprite or a group')};this.collides[target]=callback||!0};bounce(target,callback){this.collide(target,callback)};displace(target,callback){this.collide(target,callback)};overlap(target,callback){if(!(target instanceof Sprite)&&!(target instanceof Group)){throw new Error('collide target must be a sprite or a group')};this._hasOverlaps=!0;for(let s of this){if(!s._hasOverlaps)s._createSensors()};if(target instanceof Sprite){if(!target._hasOverlaps)target._createSensors()}else if(target instanceof Group){for(let s of target){if(!s._hasOverlaps)s._createSensors()};target._hasOverlaps=!0};this.overlaps[target]=callback||!0};move(x,y,speed){let centroid=this.centroid;let movements=[];for(let s of this){let dest={x:s.x-centroid.x+x,y:s.y-centroid.y+y};movements.push(s.move(dest.x,dest.y,speed))};return Promise.all(movements)};moveTowards(x,y,tracking){let centroid=this.resetCentroid();for(let s of this){if(s.distCentroid===undefined)this.resetDistancesFromCentroid();let dest={x:s.distCentroid.x+x,y:s.distCentroid.y+y};s.moveTowards(dest.x,dest.y,tracking)}};orbit(amount){if(!this.centroid)this.resetCentroid();this.orbitAngle+=amount;let angle=this.orbitAngle;for(let s of this){if(s.distCentroid===undefined)this.resetDistancesFromCentroid();let x=s.distCentroid.x;let y=s.distCentroid.y;let x2=x*this.p.cos(angle)-y*this.p.sin(angle);let y2=x*this.p.sin(angle)+y*this.p.cos(angle);x2+=this.centroid.x;y2+=this.centroid.y;s.vel.x=(x2-s.x)*0.1*s.tileSize;s.vel.y=(y2-s.y)*0.1*s.tileSize}};get(i){return this[i]};contains(sprite){return this.indexOf(sprite)>-1};push(s){if(!(s instanceof Sprite)){throw new Error('you can only add sprites to a group')};if(this.indexOf(s)==-1){super.push(s);if(this.parent)this.p.world.groups[this.parent].push(s);s.groups.push(this);return!0}};add(s){this.push(s)};size(){return this.length};toString(){return'g'+this.idNum};cull(top,bottom,left,right,cb){if(this.shouldCull===!1&&!this._isAllSpritesGroup)return;if(left===undefined){let size=top;cb=bottom;top=bottom=left=right=size};if(isNaN(top)||isNaN(bottom)||isNaN(left)||isNaN(right)){throw new TypeError('The culling boundary must be defined with numbers')};if(cb&&typeof cb!='function'){throw new TypeError('The callback to group.cull must be a function')};let minX=-left;let minY=-top;let maxX=this.p.width+right;let maxY=this.p.height+bottom;for(let s of this){if(s.x<minX||s.y<minY||s.x>maxX||s.y>maxY){if(cb)cb(s);else s.remove()}};if(this._isAllSpritesGroup)this.shouldCull=!1};remove(item){if(item===undefined){while(this.length>0){this[0].remove()};return};let idx;if(typeof item=='number'){idx=item}else{for(let i=this.length-1;i>=0;i--){if(this[i]===item){idx=i;break}}};if(idx!==undefined){let removed=this[idx];let gIdx=this[idx].groups.findIndex((g)=>g.idNum==this.idNum);this[idx].groups.splice(gIdx,1);this.splice(idx,1);return removed};throw new Error('Sprite not found in group')};removeAll(){this.remove()};maxDepth(){if(this.length==0)return 0;if(this.length==1&&this[0].layer===undefined)return 0;let max=this[0].layer;for(let s of this){if(s.layer>max)max=s.layer};return max};minDepth(){if(this.length===0){return 99999};return this.reduce(function(minDepth,sprite){return Math.min(minDepth,sprite.depth)},Infinity)};draw(){let g=[...this];g.sort((a,b)=>a.layer-b.layer);for(let i=0;i<g.length;i++){let sprite=g[i];if(sprite.life--<0){sprite.remove();g.splice(i,1);i--;continue};if(sprite.visible)sprite.draw()}}};Sprite.prototype.addAnimation=Group.prototype.addAnimation=Sprite.prototype.addAni=Group.prototype.addAni=Sprite.prototype.addImage=Group.prototype.addImage=Sprite.prototype.addImg=Group.prototype.addImg=function(){let args=[...arguments];let name,ani;if(args[0]instanceof SpriteAnimation){ani=args[0];name=ani.name||'default';ani.name=name}else if(args[1]instanceof SpriteAnimation){name=args[0];ani=args[1];ani.name=name}else{ani=new SpriteAnimation(this,...args);name=ani.name};this.animations[name]=ani;this._animation=ani;return ani};Sprite.prototype.addAnis=Group.prototype.addAnis=Sprite.prototype.addAnimations=Group.prototype.addAnimations=Sprite.prototype.addImages=Group.prototype.addImages=Sprite.prototype.addImgs=Group.prototype.addImgs=function(){let args=arguments;let atlases;if(args.length==1){atlases=args[0]}else{this.spriteSheet=args[0];atlases=args[1]};for(let name in atlases){let atlas=atlases[name];this.addAni(name,atlas)}};class World extends pl.World{constructor(){super(new pl.Vec2(0,0),!0);this.p=pInst;this.width=this.p.width;this.height=this.p.height;this._offset={x:0,y:0};let _this=this;this.offset={get x(){return-_this._offset.x},set x(val){_this._offset.x=val;_this.resize()},get y(){return-_this._offset.y},set y(val){_this._offset.y=val;_this.resize()}};this.resize();this.autoResetAnimations=!1;this.palettes=this.p.world?.palettes||[{b:'black',c:'crimson',d:'dark blue',f:'fuchsia',g:'green',h:'hot pink',i:'blue',k:'black',l:'lavender',m:'magenta',n:'brown',o:'orange',p:'pink',r:'red',s:'sky blue',t:'turquoise',u:'blue',v:'violet',w:'white',y:'yellow'}];this.groups=[this.p.allSprites];this.groupsCreated=1;this.spritesCreated=0;this.contacts=[];this.on('begin-contact',this._beginContact);this.on('end-contact',this._endContact);this.gravity={get x(){return _this.m_gravity.x},set x(val){_this.m_gravity.x=_this.p.round(val||0)},get y(){return _this.m_gravity.y},set y(val){_this.m_gravity.y=_this.p.round(val||0)}}};resize(w,h){w??=this.p.width;h??=this.p.height;this.origin={x:w*0.5+this.offset.x,y:h*0.5+this.offset.y};if(this.p.allSprites.tileSize!=1){this.origin.x-=this.p.allSprites.tileSize*0.5;this.origin.y-=this.p.allSprites.tileSize*0.5};this.hw=w*0.5;this.hh=h*0.5;this.halfWidth=this.hw;this.halfHeight=this.hh};_beginContact(contact){let a=contact.m_fixtureA;let b=contact.m_fixtureB;let contactType='collides';if(a.isSensor())contactType='overlaps';a=a.m_body.sprite;b=b.m_body.sprite;a.touching[b]=!0;b.touching[a]=!0;let cb=_findContactCB(contactType,a,b);if(cb){this.contacts.push([cb,a,b]);return};if(!cb)cb=_findContactCB(contactType,b,a);if(cb)this.contacts.push([cb,b,a])};_endContact(contact){let a=contact.m_fixtureA.m_body.sprite;let b=contact.m_fixtureB.m_body.sprite;a.touching[b]=!1;b.touching[a]=!1}};class Camera{constructor(x,y,zoom){this.p=pInst;let _this=this;this.position={get x(){return _this.x},set x(val){_this.x=val},get y(){return _this.y},set y(val){_this.y=val}};this._pos={x:0,y:0};this.zoom=zoom||1;this.mouse={x:this.p.mouseX,y:this.p.mouseY};this.active=!1;this.bound={min:{x:0,y:0},max:{x:0,y:0}};if(x)this.x=x;if(y)this.y=y};get x(){return this._pos.x};set x(val){this._pos.x=val;this.bound.min.x=this.x-this.p.world.hw/this.zoom-100;this.bound.max.x=this.x+this.p.world.hw/this.zoom+100};get y(){return this._pos.y};set y(val){this._pos.y=val;this.bound.min.y=this.y-this.p.world.hh/this.zoom-100;this.bound.max.y=this.y+this.p.world.hh/this.zoom+100};on(){if(!this.active){this.p.cameraPush.call(this.p);this.active=!0}};off(){if(this.active){this.p.cameraPop.call(this.p);this.active=!1}}};function _findContactCB(type,s0,s1){let cb=s0[type][s1];if(cb)return cb;for(let g1 of s1.groups){cb=s0[type][g1];if(cb)return cb};for(let g0 of s0.groups){cb=g0[type][s1];if(cb)return cb;for(let g1 of s1.groups){cb=g0[type][g1];if(cb)return cb}};return!1};pl.Fixture.prototype.shouldCollide=function(that){let a=this;let b=that;if(a.isSensor()&&b.isSensor())return!0;if(a.isSensor()&&!b.isSensor())return!1;if(!a.isSensor()&&b.isSensor())return!1;a=a.m_body.sprite;b=b.m_body.sprite;let cb=_findContactCB('overlaps',a,b);if(!cb)cb=_findContactCB('overlaps',b,a);if(cb)return!1;return!0};class Tiles{constructor(tiles,x,y,w,h){if(typeof tiles=='string')tiles=tiles.split('\n');x??=0;y??=0;w??=1;h??=1;for(let row=0;row<tiles.length;row++){for(let col=0;col<tiles[row].length;col++){let t=tiles[row][col];if(t==' '||t=='.')continue;let ani,g;for(g of pInst.world.groups){ani=g.animations[t];if(ani)break};if(ani){new g.Sprite(ani,x+col*w,y+row*h);continue};let wasFound=!1;for(g of pInst.world.groups){if(g.tile==t){wasFound=!0;break}};if(wasFound){new g.Sprite(x+col*w,y+row*h);continue};let s;for(s of pInst.world.allSprites){if(s.tile==t){wasFound=!0;break}};if(wasFound){s.x=x+col*w;s.y=y+row*h;continue};console.error('Tile not found: '+t)}}}};this.Tiles=Tiles;p5.prototype.createTiles=function(tiles,x,y,w,h){return new Tiles(tiles,x,y,w,h)};p5.prototype.updateSprites=function(timeStep,velocityIterations,positionIterations){for(let s of this.allSprites){s.previousPosition.x=s.x;s.previousPosition.y=s.y};this.world.step(timeStep||1/60,velocityIterations||8,positionIterations||3);for(let c of this.world.contacts){if(typeof c[0]=='function'){c[0](c[1],c[2])}};this.world.contacts=[];for(let s of this.allSprites){s.update()};this.p5play.autoUpdateSprites=!1};p5.prototype.getSpritesAt=function(x,y,group,cameraActiveWhenDrawn){cameraActiveWhenDrawn??=!0;const convertedPoint=new pl.Vec2(x/plScale,y/plScale);const aabb=new pl.AABB();aabb.lowerBound=new pl.Vec2(convertedPoint.x-0.001,convertedPoint.y-0.001);aabb.upperBound=new pl.Vec2(convertedPoint.x+0.001,convertedPoint.y+0.001);let fxts=[];pInst.world.queryAABB(aabb,(fxt)=>{if(!fxt.getBody().isStatic()){if(fxt.getShape().testPoint(fxt.getBody().getTransform(),convertedPoint)){fxts.push(fxt)}};return!0});group??=pInst.allSprites;let sprites=[];if(fxts.length>0){for(let s of group){if(!s.body)continue;if(fxts.includes(s.body.m_fixtureList)){if(s._cameraActiveWhenDrawn==cameraActiveWhenDrawn)sprites.push(s)}}};return sprites};p5.prototype.getSpriteAt=function(x,y,group){let sprites=p5.prototype.getSpritesAt(x,y,group);sprites.sort((a,b)=>(a.layer-b.layer)*-1);return sprites[0]};p5.prototype.colorPal=(c,palette)=>{if(c instanceof p5.Color)return c;if(typeof palette=='number'){palette=pInst.world.palettes[palette]};palette??=pInst.world.palettes[0];let clr;if(palette)clr=palette[c];if(clr===''||c==='.'||c===' '){return pInst.color(0,0,0,0)};return pInst.color(clr||c)};p5.prototype.spriteArt=(txt,scale,palette)=>{scale??=1;if(typeof palette=='number'){palette=pInst.world.palettes[palette]};palette??=pInst.world.palettes[0];let lines=txt;if(typeof txt=='string'){txt=txt.replace(/\r*\n\t+/g,'\n');txt=txt.replace(/\s+$/g,'');lines=txt.split('\n')};let w=0;for(let line of lines){if(line.length>w)w=line.length};let h=lines.length;let img=pInst.createImage(w*scale,h*scale);img.loadPixels();for(let i=0;i<lines.length;i++){for(let j=0;j<lines[i].length;j++){for(let sX=0;sX<scale;sX++){for(let sY=0;sY<scale;sY++){let c=p5.prototype.colorPal(lines[i][j],palette);img.set(j*scale+sX,i*scale+sY,c)}}}};img.updatePixels();pInst.p5play.images.onLoad(img);return img};p5.prototype.drawSprite=function(sprite){if(pInst.frameCount==1)console.warn('drawSprite() is deprecated, use sprite.draw() instead.');sprite.draw()};p5.prototype.drawSprites=function(group){if(pInst.frameCount==1)console.warn('drawSprites() is deprecated, use group.draw() instead.');group??=pInst.allSprites;group.draw()};p5.prototype.createSprite=function(){return new Sprite(...arguments)};p5.prototype.createGroup=function(){return new Group(...arguments)};p5.prototype.loadAni=p5.prototype.loadAnimation=function(){let args=[...arguments];let parent,name;if(args[0]instanceof Sprite||args[0]instanceof Group){parent=args[0];args=args.slice(1)};parent??=this.allSprites;let sa=parent.addAnimation(...args);return sa};p5.prototype.animation=function(ani,x,y,r,sX,sY){if(ani.visible)ani.update();ani.draw(x,y,r,sX,sY)};p5.prototype.delay=(millisecond)=>{if(!millisecond){return new Promise(requestAnimationFrame)}else{return new Promise((resolve)=>{setTimeout(resolve,millisecond)})}};p5.prototype.sleep=(millisecond)=>{return this.delay(millisecond)};p5.prototype.play=(sound)=>{if(!sound.play)throw new Error('Tried to play a sound but the sound is not a sound object: '+sound);return new Promise((resolve,reject)=>{sound.play();sound.onended(()=>resolve())})};let userDisabledP5Errors=p5.disableFriendlyErrors;p5.disableFriendlyErrors=!0;const _createCanvas=this.createCanvas;this.createCanvas=function(){let args=[...arguments];if(typeof args[0]=='string'){let ratio=args[0].split(':');let rW=Number(ratio[0]);let rH=Number(ratio[1]);let w=window.innerWidth;let h=(window.innerWidth*rH)/rW;if(h>window.innerHeight){w=(window.innerHeight*rW)/rH;h=window.innerHeight};args[0]=w;args[1]=h}else if(args.length<2){args[0]=window.innerWidth;args[1]=window.innerHeight};if(args.length<3)args[2]='p2d';_createCanvas.call(pInst,...args);this.canvas.tabIndex=0;this.world.resize();if(!userDisabledP5Errors)p5.disableFriendlyErrors=!1;let style=document.createElement('style');style.innerHTML=`canvas { outline: none; }`;document.head.appendChild(style)};const _background=this.background;this.background=function(){let args=arguments;let c;if(args.length==1){c=p5.prototype.colorPal(args[0])};if(c!==undefined)_background.call(this,c);else _background.call(this,...args)};const _fill=this.fill;this.fill=function(){let args=arguments;let c;if(args.length==1){c=p5.prototype.colorPal(args[0])};if(c!==undefined)_fill.call(this,c);else _fill.call(this,...args)};const _stroke=this.stroke;this.stroke=function(){let args=arguments;let c;if(args.length==1){c=p5.prototype.colorPal(args[0])};if(c!==undefined)_stroke.call(this,c);else _stroke.call(this,...args)};this.p5play.images={onLoad:(img)=>{}};const _loadImage=this.loadImage;this.loadImage=function(){let args=arguments;let url=args[0];let img=pInst.p5play.images[url];let cb;if(typeof args[args.length-1]=='function'){cb=args[args.length-1]};if(img){if(!img.modified){if(cb)img.cbs.push(cb);else pInst._decrementPreload()}else{if(cb)cb();pInst._decrementPreload()};return img};img=_loadImage.call(pInst,url,(_img)=>{_img.w=_img.width;_img.h=_img.height;for(let cb of _img.cbs){cb();pInst._decrementPreload()};_img.cbs=[]});img.cbs=[];if(typeof args[1]=='number'){img.width=img.w=args[1];if(typeof args[2]=='number')img.height=img.h=args[2];else img.height=img.h=img.w};if(cb)img.cbs.push(cb);img.url=url;pInst.p5play.images[url]=img;pInst.p5play.images.onLoad(img);return img};this.Sprite=Sprite;this.SpriteAnimation=SpriteAnimation;this.Group=Group;this.World=World;this.allSprites=new Group();this.allSprites.shouldCull=!0;this.allSprites.tileSize=1;this.world=new World();this.frame=0;this.cameraPush=function(){let camera=this.camera;if(!camera.active){camera.active=!0;this.push();this.scale(camera.zoom);this.translate(-camera.x+this.world.hw/camera.zoom,-camera.y+this.world.hh/camera.zoom)}};this.cameraPop=function(){if(this.camera.active){this.pop();this.camera.active=!1}};this.camera=new Camera();class InputDevice{constructor(){this.heldThreshold=12};init(inputs){for(let inp of inputs){this[inp]=0}};pressed(inp){inp??=this.default;return this[inp]==1||this[inp]==-2};pressing(inp){inp??=this.default;return this[inp]>0||this[inp]==-2};held(inp){inp??=this.default;return this[inp]==this.heldThreshold};holding(inp){inp??=this.default;return this[inp]>=this.heldThreshold};released(inp){inp??=this.default;return this[inp]==-1||this[inp]==-2}};class Mouse extends InputDevice{constructor(){super();let inputs=['x','y','left','center','right'];this.init(inputs);this.default='left';this.draggable=!1};dragging(inp){inp??=this.default;this.draggable=!0;return this[inp]>=this.heldThreshold};get isOnCanvas(){return this.x>=0&&this.x<pInst.width&&this.y>=0&&this.y<pInst.height}};this.mouse=new Mouse();class SpriteMouse extends Mouse{constructor(){super();this.hover=0};hoveredOn(){return this.hover==1};hovering(){return this.hover>0};hoveredOut(){return this.hover==-1}};const _onmousedown=this._onmousedown;this._onmousedown=function(e){let btn='left';if(e.button===1)btn='center';else if(e.button===2)btn='right';this.mouse[btn]++;let ms;if(this.p5play.mouseSprites.length){ms=this.p5play.mouseSprites[0];ms.mouse[btn]=1;if(this.p5play.mouseSprite){this.p5play.mouseSprite.mouse[btn]=0;if(btn=='left'){this.p5play.mouseSprite.mouse.draggable=!1}};this.p5play.mouseSprite=ms};_onmousedown.call(this,e)};const _onmouseup=this._onmouseup;this._onmouseup=function(e){let btn='left';if(e.button===1)btn='center';else if(e.button===2)btn='right';if(this.mouse[btn]>1)this.mouse[btn]=-1;else this.mouse[btn]=-2;if(this.p5play.mouseSprite){if(this.p5play.mouseSprite.mouse.hover>0){if(this.p5play.mouseSprite.mouse[btn]>1){this.p5play.mouseSprite.mouse[btn]=-1}else{this.p5play.mouseSprite.mouse[btn]=-2}}else{this.p5play.mouseSprite.mouse[btn]=0;this.p5play.mouseSprite.mouse.draggable=!1}};_onmouseup.call(this,e)};class KeyBoard extends InputDevice{constructor(){super();this.default=' '}};this.kb=new KeyBoard();this.keyboard=this.kb;if(navigator.keyboard){const keyboard=navigator.keyboard;if(window==window.top){keyboard.getLayoutMap().then((keyboardLayoutMap)=>{const key=keyboardLayoutMap.get('KeyW');if(key!='w')this.p5play.standardizeKeyboard=!0})}else{this.p5play.standardizeKeyboard=!0}}else{this.p5play.standardizeKeyboard=!0};function getKeyFromCode(e){let code=e.code;if(code.length==4&&code.slice(0,3)=='Key'){return code[3].toLowerCase()};return e.key};let simpleKeyControls={w:'up',s:'down',a:'left',d:'right',i:'up2',k:'down2',j:'left2',l:'right2'};const _onkeydown=this._onkeydown;this._onkeydown=function(e){let key=e.key;if(this.p5play.standardizeKeyboard){key=getKeyFromCode(e)};let keys=[key];let k=simpleKeyControls[key];if(k)keys.push(k);for(let k of keys){if(!this.kb[k]||this.kb[k]<0){this.kb[k]=1}};_onkeydown.call(this,e)};const _onkeyup=this._onkeyup;this._onkeyup=function(e){let key=e.key;if(this.p5play.standardizeKeyboard){key=getKeyFromCode(e)};let keys=[key];let k=simpleKeyControls[key];if(k)keys.push(k);for(let k of keys){if(this.kb[k]>0)this.kb[k]=-1;else this.kb[k]=-2};_onkeyup.call(this,e)};class Contro extends InputDevice{constructor(){super();let inputs=['a','b','x','y','l','r','lt','rt','select','start','up','down','left','right','leftTrigger','rightTrigger'];this.init(inputs);this.leftStick={x:0,y:0,btn:0};this.rightStick={x:0,y:0,btn:0};this._btns={a:0,b:1,x:2,y:3,l:4,r:5,lt:6,rt:7,select:8,start:9,up:12,down:13,left:14,right:15};this._axes={leftStick:{x:0,y:1},rightStick:{x:2,y:3},leftTrigger:4,rightTrigger:5}};_update(){this.gamepad=navigator.getGamepads()[this.gamepad.index];let pad=this.gamepad;for(let name in this._btns){let idx=this._btns[name];if(pad.buttons[idx].pressed)this[name]++;else this[name]=0};this.leftStick.x=pad.axes[this._axes.leftStick.x];this.leftStick.y=pad.axes[this._axes.leftStick.y];this.rightStick.x=pad.axes[this._axes.rightStick.x];this.rightStick.y=pad.axes[this._axes.rightStick.y];this.leftTrigger=pad.axes[this._axes.leftTrigger];this.rightTrigger=pad.axes[this._axes.rightTrigger];return!0}};class Contros extends Array{constructor(){super();let _this=this;window.addEventListener('gamepadconnected',(e)=>{_this._addContro(e.gamepad)});this.default='a';let methods=['pressed','pressing','held','holding','released'];for(let m of methods){this[m]=(inp)=>{if(this[0])return this[0][m](inp)}};let props=['leftStick','rightStick'];for(let prop of props){this[prop]={};for(let axis of['x','y']){Object.defineProperty(this[prop],axis,{get(){if(_this[0])return _this[0][prop][axis];return 0}})}}};_addContro(gp){let contro=new Contro();contro.gamepad=gp;contro.id=gp.id;this.push(contro)};_update(){for(let i=0;i<this.length;i++){let connected=this[i]._update();if(!connected){this.splice(i,1);i--}}}};this.contro=new Contros()});p5.prototype.registerMethod('pre',function(){if(this.frameCount==1){this.camera.x=this.world.hw;this.camera.y=this.world.hh;this.camera.init=!0;this.canvas.addEventListener('contextmenu',(event)=>event.preventDefault())};this.mouse.x=(this.mouseX-this.world.hw)/this.camera.zoom+this.camera.x;this.mouse.y=(this.mouseY-this.world.hh)/this.camera.zoom+this.camera.y;this.camera.mouse.x=this.mouseX;this.camera.mouse.y=this.mouseY;this.contro._update()});p5.prototype.registerMethod('post',function p5playPostDraw(){this.frame=this.frameCount;if(this.p5play.autoDrawSprites){this.camera.on();this.allSprites.draw();this.camera.off();this.p5play.autoDrawSprites=!0};if(this.p5play.autoUpdateSprites){this.updateSprites();this.p5play.autoUpdateSprites=!0};this.allSprites.cull(10000);for(let btn of['left','center','right']){if(this.mouse[btn]<0)this.mouse[btn]=0;else if(this.mouse[btn]>0)this.mouse[btn]++;if(this.p5play.mouseSprite){if(this.p5play.mouseSprite.mouse[btn]<0){this.p5play.mouseSprite.mouse[btn]=0}}};for(let k in this.kb){if(k=='heldThreshold')continue;if(this.kb[k]<0)this.kb[k]=0;else if(this.kb[k]>0)this.kb[k]++};if(this.p5play.mouseTracking){if(this.p5play.mouseSprite){let val=0;for(let btn of['left','center','right']){val+=this.p5play.mouseSprite.mouse[btn]};if(val==0)this.p5play.mouseSprite=null};let sprites=p5.prototype.getSpritesAt(this.mouse.x,this.mouse.y);sprites.sort((a,b)=>(a.layer-b.layer)*-1);let uiSprites=p5.prototype.getSpritesAt(this.camera.mouse.x,this.camera.mouse.y,this.allSprites,!1);uiSprites.sort((a,b)=>(a.layer-b.layer)*-1);sprites=sprites.concat(uiSprites);let ms;if(this.mouse.pressing('left')||this.mouse.pressing('center')||this.mouse.pressing('right')){if(!this.p5play.mouseSprite?.mouse.draggable){for(let s of sprites){if(s==this.p5play.mouseSprite){ms=s;break}}}else{ms=this.p5play.mouseSprite};if(ms){ms.mouse.left=this.mouse.left;ms.mouse.center=this.mouse.center;ms.mouse.right=this.mouse.right;ms.mouse.x=ms.x-this.mouse.x;ms.mouse.y=ms.y-this.mouse.y}else if(this.p5play.mouseSprite){this.p5play.mouseSprite.mouse.left=0;this.p5play.mouseSprite.mouse.center=0;this.p5play.mouseSprite.mouse.right=0;this.p5play.mouseSprite.mouse.draggable=!1}};for(let s of sprites){s.mouse.hover++};for(let s of this.p5play.mouseSprites){if((!this.p5play.mouseSprite?.mouse.draggable||s!=ms)&&!sprites.includes(s)){s.mouse.hover=-1;s.mouse.left=0;s.mouse.center=0;s.mouse.right=0;s.mouse.draggable=!1}};this.p5play.mouseSprites=sprites};this.cameraPop()})